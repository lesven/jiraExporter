services:
  nginx:
    image: nginx:alpine
    container_name: jira_exporter_nginx
    ports:
      - "8087:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/html/public
      - ./:/var/www/html
    depends_on:
      - php
    networks:
      - jira_exporter

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: jira_exporter_php
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=${APP_ENV:-prod}
      - DATABASE_URL=mysql://jira_user:jira_password@mariadb:3306/jira_exporter?serverVersion=10.11.0-MariaDB&charset=utf8mb4
    depends_on:
      - mariadb
    networks:
      - jira_exporter

  mariadb:
    image: mariadb:10.11
    container_name: jira_exporter_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: jira_exporter
      MYSQL_USER: jira_user
      MYSQL_PASSWORD: jira_password
    volumes:
      - mariadb_data:/var/lib/mysql
    #ports:
    #  - "3306:3306"
    networks:
      - jira_exporter

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  mariadb_data:

networks:
  jira_exporter:
    driver: bridge
